# Form implementation generated from reading ui file '.\view\VSdebugger.ui'
#
# Created by: PyQt6 UI code generator 6.4.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1000, 700)
        font = QtGui.QFont()
        font.setFamily("Calibri")
        MainWindow.setFont(font)
        self.centralwidget = QtWidgets.QWidget(parent=MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.centralwidget)
        self.horizontalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.tabWidget = QtWidgets.QTabWidget(parent=self.centralwidget)
        self.tabWidget.setObjectName("tabWidget")
        self.tab_5 = QtWidgets.QWidget()
        self.tab_5.setObjectName("tab_5")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.tab_5)
        self.verticalLayout_5.setContentsMargins(6, 6, 6, 6)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.plainTextLog = QtWidgets.QPlainTextEdit(parent=self.tab_5)
        font = QtGui.QFont()
        font.setFamily("Consolas")
        self.plainTextLog.setFont(font)
        self.plainTextLog.setReadOnly(True)
        self.plainTextLog.setObjectName("plainTextLog")
        self.verticalLayout_5.addWidget(self.plainTextLog)
        self.widget = QtWidgets.QWidget(parent=self.tab_5)
        self.widget.setObjectName("widget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.widget)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.btnClearLog = QtWidgets.QToolButton(parent=self.widget)
        self.btnClearLog.setObjectName("btnClearLog")
        self.horizontalLayout.addWidget(self.btnClearLog)
        spacerItem = QtWidgets.QSpacerItem(915, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.horizontalLayout.addItem(spacerItem)
        self.checkLogWrap = QtWidgets.QCheckBox(parent=self.widget)
        self.checkLogWrap.setChecked(True)
        self.checkLogWrap.setObjectName("checkLogWrap")
        self.horizontalLayout.addWidget(self.checkLogWrap)
        self.verticalLayout_5.addWidget(self.widget)
        self.tabWidget.addTab(self.tab_5, "")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.tab)
        self.verticalLayout.setContentsMargins(6, 6, 6, 6)
        self.verticalLayout.setObjectName("verticalLayout")
        self.plainTextEdit = QtWidgets.QPlainTextEdit(parent=self.tab)
        self.plainTextEdit.setReadOnly(True)
        self.plainTextEdit.setObjectName("plainTextEdit")
        self.verticalLayout.addWidget(self.plainTextEdit)
        self.tabWidget.addTab(self.tab, "")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.tab_2)
        self.verticalLayout_2.setContentsMargins(6, 6, 6, 6)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.plainTextEdit_2 = QtWidgets.QPlainTextEdit(parent=self.tab_2)
        self.plainTextEdit_2.setReadOnly(True)
        self.plainTextEdit_2.setObjectName("plainTextEdit_2")
        self.verticalLayout_2.addWidget(self.plainTextEdit_2)
        self.tabWidget.addTab(self.tab_2, "")
        self.tab_3 = QtWidgets.QWidget()
        self.tab_3.setObjectName("tab_3")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.tab_3)
        self.verticalLayout_3.setContentsMargins(6, 6, 6, 6)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.plainTextEdit_3 = QtWidgets.QPlainTextEdit(parent=self.tab_3)
        self.plainTextEdit_3.setReadOnly(True)
        self.plainTextEdit_3.setObjectName("plainTextEdit_3")
        self.verticalLayout_3.addWidget(self.plainTextEdit_3)
        self.tabWidget.addTab(self.tab_3, "")
        self.tab_4 = QtWidgets.QWidget()
        self.tab_4.setObjectName("tab_4")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.tab_4)
        self.verticalLayout_4.setContentsMargins(6, 6, 6, 6)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.plainTextEdit_4 = QtWidgets.QPlainTextEdit(parent=self.tab_4)
        self.plainTextEdit_4.setReadOnly(True)
        self.plainTextEdit_4.setObjectName("plainTextEdit_4")
        self.verticalLayout_4.addWidget(self.plainTextEdit_4)
        self.tabWidget.addTab(self.tab_4, "")
        self.horizontalLayout_2.addWidget(self.tabWidget)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(parent=MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1000, 22))
        self.menubar.setObjectName("menubar")
        self.menuTool = QtWidgets.QMenu(parent=self.menubar)
        self.menuTool.setObjectName("menuTool")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(parent=MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionQuit = QtGui.QAction(parent=MainWindow)
        self.actionQuit.setObjectName("actionQuit")
        self.menuTool.addAction(self.actionQuit)
        self.menubar.addAction(self.menuTool.menuAction())

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(1)
        self.actionQuit.triggered.connect(MainWindow.close) # type: ignore
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "VisualStudioDebugger"))
        self.btnClearLog.setText(_translate("MainWindow", "Clear"))
        self.checkLogWrap.setText(_translate("MainWindow", "Wrap"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_5), _translate("MainWindow", "Log"))
        self.plainTextEdit.setPlainText(_translate("MainWindow", "1. Generate a Debug Info file。\n"
"→Tag[PDBIN]\n"
"*You need to do this for the first time, but then only required when you finds some values are weird.\n"
"\n"
"2. Attach to a process.\n"
"\n"
"3. Start use Expression and Memory view.\n"
"→Tab[Expression] と [Memory]"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab), _translate("MainWindow", "How to use?"))
        self.plainTextEdit_2.setPlainText(_translate("MainWindow", "1. From menu [PDB], click [Generate PDB...].\n"
"\n"
"2. Choose a build folder for Visual Studio. (ie. Win32/).\n"
"\n"
"3. Select a .pdb file in the left panel, then press [Generate].\n"
"\n"
"4. Select a .pdbin file in the left panel, then press [Load]."))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_2), _translate("MainWindow", "PDBIN"))
        self.plainTextEdit_3.setPlainText(_translate("MainWindow", "1. Input an address, then press Enter to vew memory.\n"
"\n"
"2. Default size is 1024 bytes.\n"
"\n"
"3. More actions in the top-right [☰] menu."))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_3), _translate("MainWindow", "Memory"))
        self.plainTextEdit_4.setPlainText(_translate("MainWindow", "1. Input an expression, then press Enter to view the structure.\n"
"* Current limitations for expression:\n"
"\n"
"- Global variable references, ie.\n"
"  gModule\n"
"  gModule.attribute\n"
"  gModule.buffer->attr\n"
"\n"
"- Cast a pointer from an address, ie.\n"
"  (ModelStruct *)0x1234\n"
"\n"
"2. Value modification will be written to the process in real-time\n"
"\n"
"3. If you want to refresh all values, please click [Refresh] from top-right [☰] menu.\n"
"\n"
"4. PVOID type is editable.\n"
"\n"
"5. Count value for pointer is also editable."))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_4), _translate("MainWindow", "Expression"))
        self.menuTool.setTitle(_translate("MainWindow", "Tool"))
        self.actionQuit.setText(_translate("MainWindow", "Quit"))
        self.actionQuit.setShortcut(_translate("MainWindow", "Ctrl+Q"))
